{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\ProyectsPersonal\\\\ReactBasic\\\\my-reactapp\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass SingleForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.state = {\n      username: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"username\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Your username is: \", this.state.username));\n  } // End Render Method\n\n\n} // End Component\n\n\nclass MultipleForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = ({\n      target\n    }) => {\n      this.setState({\n        [target.name]: target.value\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  } // To Assign Dinamycly to the variable , the typed value according each field\n\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"UserName: \", this.state.username, \" \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Password: \", this.state.password));\n  }\n\n} // End Component\n\n\nclass DisplayAlert extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        msg: event.target.value\n      });\n    };\n\n    this.handleClick = event => {\n      // Avoid event propagation\n      event.preventDefault();\n      var Message = this.state.msg;\n      alert(Message);\n    };\n\n    this.state = {\n      msg: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"msg\",\n      value: this.state.msg,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Click Me\"));\n  }\n\n} // End Component\n\n\nclass WeaterForecast extends React.Component {\n  // Document on ready\n  componentDidMount() {\n    alert(\"Hello\");\n  } // End document on ready\n\n\n  render() {} // End render function\n\n\n} // End component\n\n\nReactDOM.render( // To Display All the Components\n[React.createElement(SingleForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144\n  },\n  __self: this\n}), React.createElement(MultipleForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144\n  },\n  __self: this\n}), React.createElement(DisplayAlert, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144\n  },\n  __self: this\n}), React.createElement(WeaterForecast, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144\n  },\n  __self: this\n})], // To display Jus one Component\n//<DisplayAlert/>,\n// Here is where your componets will be displayed\ndocument.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Daniel/Documents/ProyectsPersonal/ReactBasic/my-reactapp/src/index.js"],"names":["React","ReactDOM","SingleForm","Component","constructor","props","handleChange","event","setState","username","target","value","state","render","MultipleForm","name","password","DisplayAlert","msg","handleClick","preventDefault","Message","alert","WeaterForecast","componentDidMount","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass SingleForm extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {username:\"\"};\r\n    }\r\n\r\n    handleChange = event=>{        \r\n        this.setState({username: event.target.value})\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <React.Fragment>\r\n            <form>\r\n              <label>username</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.handleChange}\r\n              />\r\n            </form>\r\n     \r\n            <h3>Your username is: {this.state.username}</h3>\r\n          </React.Fragment>\r\n        );\r\n        \r\n    }\r\n    // End Render Method\r\n    \r\n}\r\n// End Component\r\n\r\nclass MultipleForm extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {username:\"\", password:\"\"};\r\n    }    \r\n\r\n    // To Assign Dinamycly to the variable , the typed value according each field\r\n    handleChange = ({target}) =>{        \r\n        this.setState({[target.name]:target.value });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n\r\n            <React.Fragment>\r\n                <form>\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange ={this.handleChange}\r\n                    />\r\n\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange ={this.handleChange}\r\n                    />\r\n\r\n                </form>\r\n\r\n                <b>UserName: {this.state.username} </b> <br/>\r\n                <b>Password: {this.state.password}</b>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n// End Component\r\n\r\nclass DisplayAlert extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {msg:\"\"}\r\n    }\r\n\r\n    handleChange = event=>{        \r\n        this.setState({msg: event.target.value})\r\n    }\r\n\r\n    handleClick = event =>{\r\n        \r\n        // Avoid event propagation\r\n        event.preventDefault();        \r\n        var Message = this.state.msg;\r\n        alert(Message);\r\n    } \r\n\r\n    render(){\r\n        return(\r\n\r\n            <React.Fragment>\r\n                <form>\r\n                <label htmlFor=\"username\">Username</label>\r\n                <textarea type=\"text\" name=\"msg\" value={this.state.msg} onChange={this.handleChange}>                    \r\n                </textarea>\r\n                </form>\r\n\r\n                <button type=\"button\" onClick={this.handleClick}>Click Me</button>\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n// End Component\r\n\r\nclass WeaterForecast extends React.Component{\r\n\r\n    // Document on ready\r\n    componentDidMount(){\r\n\r\n        alert(\"Hello\")\r\n\r\n    }\r\n    // End document on ready\r\n\r\n    render(){\r\n\r\n    }\r\n    // End render function\r\n\r\n\r\n}\r\n// End component\r\n\r\nReactDOM.render(\r\n    // To Display All the Components\r\n    [<SingleForm/>, <MultipleForm/>,<DisplayAlert/>,<WeaterForecast/>],\r\n\r\n    // To display Jus one Component\r\n    //<DisplayAlert/>,\r\n\r\n    // Here is where your componets will be displayed\r\n    document.getElementById('root')\r\n);\r\n\r\n"]},"metadata":{},"sourceType":"module"}