{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\ProyectsPersonal\\\\ReactBasic\\\\my-reactapp\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass SingleForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.state = {\n      username: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"username\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Your username is: \", this.state.username));\n  } // End Render Method\n\n\n} // End Component\n\n\nclass MultipleForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = ({\n      target\n    }) => {\n      this.setState({\n        [target.name]: target.value\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  } // To Assign Dinamycly to the variable , the typed value according each field\n\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"UserName: \", this.state.username, \" \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Password: \", this.state.password));\n  }\n\n} // End Component\n\n\nclass DisplayAlert extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        msg: event.target.value\n      });\n    };\n\n    this.handleClick = event => {\n      // Avoid event propagation\n      event.preventDefault();\n      var Message = this.state.msg;\n      alert(Message);\n    };\n\n    this.state = {\n      msg: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"msg\",\n      value: this.state.msg,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Click Me\"));\n  }\n\n} // End Component\n\n\nclass WeatherForecast extends React.Component {\n  // Start Contructor\n  constructor(props) {\n    super(props);\n\n    this.GetWeatherForecast = event => {\n      debugger; // validate if weather forecast is storaged in local\n\n      var IsforecastInLocal = localStorage.getItem(\"weather\") != null ? localStorage.getItem(\"weather\") : null; // Validate if weather forecast is in local\n\n      if (IsforecastInLocal == null) {\n        // set the Url where the request would be sent\n        let URL = \"https://api.weatherbit.io/v2.0/forecast/daily?city_id=3981609&days=16&key=19dbfc63db5446fbaeb3ea537b3bb17e\"; // Start http request\n\n        fetch(URL).then(async response => {\n          // gets api response \n          var data = await response.json(); // storage the api response on localstorage. to avoid makes a request every time the page's reloading\n\n          localStorage.setItem(\"weather\", JSON.stringify(data)); // Get the Weather forecast information\n\n          this.setState({\n            weatherData: data\n          });\n        }).catch(error => {\n          // Handling errors   \n          alert(\"An Error Ocurred while the weather indormation was getting\");\n          console.log(error);\n        }); // End Http request\n      } else {\n        // Get the Weather forecast information from local\n        this.setState({\n          weatherData: JSON.parse(IsforecastInLocal)\n        });\n        console.log(JSON.parse(IsforecastInLocal));\n      } // End forecast validation\n\n    };\n\n    this.state = {\n      weatherData: \"\"\n    };\n  } // End constructor   \n  // Document on ready\n\n\n  componentDidMount() {\n    console.log(\"Hello\");\n  } // End document on ready\n\n\n  // End function\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.GetWeatherForecast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"See Weather forecast\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"il\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"il\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"il\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"il\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"il\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"5\"), React.createElement(\"il\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"6\"), React.createElement(\"il\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"7\"), React.createElement(\"il\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"8\"))));\n  } // End render function\n\n\n} // End component\n\n\nReactDOM.render( // To Display All the Components\n[React.createElement(SingleForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 213\n  },\n  __self: this\n}), React.createElement(MultipleForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 213\n  },\n  __self: this\n}), React.createElement(DisplayAlert, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 213\n  },\n  __self: this\n}), React.createElement(WeatherForecast, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 213\n  },\n  __self: this\n})], // To display Jus one Component\n//<DisplayAlert/>,\n// Here is where your componets will be displayed\ndocument.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Daniel/Documents/ProyectsPersonal/ReactBasic/my-reactapp/src/index.js"],"names":["React","ReactDOM","SingleForm","Component","constructor","props","handleChange","event","setState","username","target","value","state","render","MultipleForm","name","password","DisplayAlert","msg","handleClick","preventDefault","Message","alert","WeatherForecast","GetWeatherForecast","IsforecastInLocal","localStorage","getItem","URL","fetch","then","response","data","json","setItem","JSON","stringify","weatherData","catch","error","console","log","parse","componentDidMount","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass SingleForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { username: \"\" };\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <form>\r\n                    <label>username</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={this.state.username}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </form>\r\n\r\n                <h3>Your username is: {this.state.username}</h3>\r\n            </React.Fragment>\r\n        );\r\n\r\n    }\r\n    // End Render Method\r\n\r\n}\r\n// End Component\r\n\r\nclass MultipleForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { username: \"\", password: \"\" };\r\n    }\r\n\r\n    // To Assign Dinamycly to the variable , the typed value according each field\r\n    handleChange = ({ target }) => {\r\n        this.setState({ [target.name]: target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <form>\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={this.state.username}\r\n                        onChange={this.handleChange}\r\n                    />\r\n\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange}\r\n                    />\r\n\r\n                </form>\r\n\r\n                <b>UserName: {this.state.username} </b> <br />\r\n                <b>Password: {this.state.password}</b>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n// End Component\r\n\r\nclass DisplayAlert extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { msg: \"\" }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ msg: event.target.value })\r\n    }\r\n\r\n    handleClick = event => {\r\n\r\n        // Avoid event propagation\r\n        event.preventDefault();\r\n        var Message = this.state.msg;\r\n        alert(Message);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <form>\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <textarea type=\"text\" name=\"msg\" value={this.state.msg} onChange={this.handleChange}>\r\n                    </textarea>\r\n                </form>\r\n\r\n                <button type=\"button\" onClick={this.handleClick}>Click Me</button>\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n// End Component\r\n\r\nclass WeatherForecast extends React.Component {\r\n\r\n    // Start Contructor\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { weatherData: \"\" };\r\n    }\r\n    // End constructor   \r\n\r\n    // Document on ready\r\n    componentDidMount() {\r\n        console.log(\"Hello\");\r\n    }\r\n    // End document on ready\r\n\r\n    GetWeatherForecast = event => {\r\n        debugger\r\n        // validate if weather forecast is storaged in local\r\n        var IsforecastInLocal = localStorage.getItem(\"weather\") != null ? localStorage.getItem(\"weather\") : null;\r\n\r\n        // Validate if weather forecast is in local\r\n        if (IsforecastInLocal == null) {\r\n\r\n            // set the Url where the request would be sent\r\n            let URL = \"https://api.weatherbit.io/v2.0/forecast/daily?city_id=3981609&days=16&key=19dbfc63db5446fbaeb3ea537b3bb17e\";\r\n\r\n            // Start http request\r\n            fetch(URL).then(async response => {\r\n\r\n                // gets api response \r\n                var data = await response.json();\r\n\r\n                // storage the api response on localstorage. to avoid makes a request every time the page's reloading\r\n                localStorage.setItem(\"weather\", JSON.stringify(data));\r\n\r\n                // Get the Weather forecast information\r\n                this.setState({ weatherData: data })\r\n\r\n            }).catch(error => { // Handling errors   \r\n                alert(\"An Error Ocurred while the weather indormation was getting\");\r\n                console.log(error);\r\n            })\r\n            // End Http request\r\n\r\n        }else{\r\n            \r\n            // Get the Weather forecast information from local\r\n            this.setState({ weatherData: JSON.parse(IsforecastInLocal) })\r\n            console.log(JSON.parse(IsforecastInLocal))\r\n        }  \r\n        // End forecast validation\r\n\r\n    }\r\n    // End function\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <hr />\r\n                <div>\r\n                    <button type=\"button\" onClick={this.GetWeatherForecast}>\r\n                        See Weather forecast\r\n                    </button>\r\n\r\n                    <ul>\r\n                        <il>1</il>\r\n                        <il>2</il>\r\n                        <il>3</il>\r\n                        <il>4</il>\r\n                        <il>5</il>\r\n                        <il>6</il>\r\n                        <il>7</il>\r\n                        <il>8</il>\r\n                    </ul>\r\n\r\n\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n\r\n    }\r\n    // End render function\r\n\r\n}\r\n// End component\r\n\r\nReactDOM.render(\r\n    // To Display All the Components\r\n    [<SingleForm />, <MultipleForm />, <DisplayAlert />, <WeatherForecast />],\r\n\r\n    // To display Jus one Component\r\n    //<DisplayAlert/>,\r\n\r\n    // Here is where your componets will be displayed\r\n    document.getElementById('root')\r\n);\r\n\r\n"]},"metadata":{},"sourceType":"module"}